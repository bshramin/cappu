{"version":3,"sources":["components/Modal/index.js","helpers/errors.js","config.js","helpers/connect.js","containers/MyTokens/TokenTransferModal/index.js","components/ResultModal/index.js","containers/MyTokens/index.js","containers/Mint/index.js","containers/HomePage/index.js","containers/Header/index.js","containers/Footer/index.js","index.js"],"names":["modalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","TokenTransfer","children","show","onClose","Modal","open","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Box","sx","extractErrorMessage","error","message","errorParts","split","length","JSON","parse","value","data","NETWORK_NAME","NETWORK","CONTACT_ADDRESS","CONTACT_ABI","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","getContractAddress","getDesiredNetworkName","getWalletNetworkName","a","web3","Web3","givenProvider","eth","net","getNetworkType","networkName","isOnTheRightNetwork","getWeb3","getContract","cappuContract","Contract","connectWallet","console","info","window","ethereum","alert","requestAccounts","accounts","sessionStorage","setItem","location","reload","retrieveWalletAddress","getItem","isWalletConnected","TokenTransferModal","tokenId","onSuccess","onError","useState","account","setAccount","contract","setContract","destination","setDestination","useEffect","load","sendToken","methods","safeTransferFrom","send","from","then","catch","err","className","Input","placeholder","onChange","e","target","Button","onClick","ResultModal","color","text","Typography","id","variant","component","MyTokens","setNetworkName","tokensId","setTokensId","tokensData","setTokensData","tokenIdToTransfer","setTokenIdToTransfer","resultModalMsg","setResultModalMsg","resultModalColor","setResultModalColor","netName","getUserTokens","call","output","to","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","index","idString","toString","scope","substring","errMsg","Mint","setData","setErrMsg","mintSuccess","setMintSuccess","mintToken","mint","multiline","minRows","HomePage","numberOfTokenHolders","setNumberOfTokenHolders","numberOfMintedTokens","setNumberOfMintedTokens","getNumberOfTokenHolders","getNumberOfMintedTokens","ButtonGroup","startIcon","fontSize","Header","isLoggedIn","setIsLoggedIn","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","connectUserWallet","pages","title","url","noLogin","settings","login","removeItem","handleCloseNavMenu","AppBar","Container","maxWidth","Toolbar","disableGutters","noWrap","mr","display","xs","md","flexGrow","IconButton","size","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","page","MenuItem","textAlign","Tooltip","adrs","retrieveUserWalletAddress","mt","setting","Footer","theme","createTheme","palette","mode","primary","dark","main","light","secondary","background","default","ReactDOM","render","ThemeProvider","basename","process","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.b6dbfd46.chunk.js","sourcesContent":["import Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\n\nimport \"./style.css\";\n\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function TokenTransfer({ children, show, onClose }) {\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={show}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      {/* <Fade in={show}> */}\n      <Box sx={modalStyle}>{children}</Box>\n      {/* </Fade> */}\n    </Modal>\n  );\n}\n","export const extractErrorMessage = (error) => {\n  if (error.message) {\n    let errorParts = error.message.split(\"'\");\n\n    if (errorParts.length > 1) {\n      return JSON.parse(errorParts[1]).value.data.message;\n    }\n\n    return error.message;\n  }\n  return error;\n};\n","// For development with Ganache.\n// export const NETWORK_NAME = \"private\";\n// export const NETWORK = \"http://localhost:7545\";\n// export const CONTACT_ADDRESS = \"0x3Ce1aA8c110a74810Db3CCC4A7D8aE97ae9F907C\";\n\nexport const NETWORK_NAME = \"ropsten\";\nexport const NETWORK =\n  \"https://speedy-nodes-nyc.moralis.io/91eaf4d08216c15dcf25aa72/eth/ropsten\";\nexport const CONTACT_ADDRESS = \"0xf1359760a1b37a9f8d85341E72cEF0644DB660A1\"; // Change this to the new address of the contract\n\nexport const CONTACT_ABI = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"data\",\n        type: \"string\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"getUserTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"string[]\",\n        name: \"\",\n        type: \"string[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getNumberOfTokenHolders\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getNumberOfMintedTokens\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","import Web3 from \"web3\";\nimport { NETWORK, NETWORK_NAME, CONTACT_ABI, CONTACT_ADDRESS } from \"../config\";\n\nexport const getContractAddress = () => {\n  return CONTACT_ADDRESS;\n};\n\nexport const getDesiredNetworkName = () => {\n  return NETWORK_NAME;\n};\n\nexport const getDesiredNetwork = () => {\n  return NETWORK;\n};\n\nexport const getWalletNetwork = () => {\n  return Web3.givenProvider;\n};\n\nexport const getWalletWeb3 = () => {\n  return new Web3(Web3.givenProvider);\n};\n\nexport const getWalletNetworkName = async () => {\n  const web3 = getWalletWeb3();\n  let networkName = await web3.eth.net.getNetworkType();\n  return networkName;\n};\n\nexport const isOnTheRightNetwork = async () => {\n  let networkName = await getWalletNetworkName();\n  return networkName === getDesiredNetworkName();\n};\n\nexport const getWeb3 = async () => {\n  const isRightNetwork = await isOnTheRightNetwork();\n  if (isRightNetwork) {\n    return new Web3(Web3.givenProvider);\n  }\n  return new Web3(NETWORK);\n};\n\nexport const getContract = async () => {\n  const web3 = await getWeb3();\n  const cappuContract = new web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\n  return cappuContract;\n};\n\nexport const connectWallet = async () => {\n  console.info(\"Connecting to Wallet...\");\n  if (typeof window.ethereum === \"undefined\") {\n    alert(\"You need to install the Metamask extension.\");\n    return;\n  }\n\n  const isRightNetwork = await isOnTheRightNetwork();\n  if (!isRightNetwork) {\n    console.info(\"Wrong network!\");\n    alert(\n      \"You need to connect your wallet to the \" + NETWORK_NAME + \" network.\"\n    );\n    return;\n  }\n\n  const web3 = await getWeb3();\n  const accounts = await web3.eth.requestAccounts();\n  window.sessionStorage.setItem(\"account\", accounts[0]);\n  window.location.reload();\n};\n\nexport const retrieveWalletAddress = () => {\n  const walletAddress = window.sessionStorage.getItem(\"account\");\n  return walletAddress;\n};\n\nexport const isWalletConnected = () => {\n  const walletAddress = window.sessionStorage.getItem(\"account\");\n  return walletAddress ? true : false;\n};\n\nexport const disconnectWallet = () => {\n  window.sessionStorage.removeItem(\"account\");\n  window.location.reload();\n};\n","import { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport Modal from \"../../../components/Modal\";\nimport { extractErrorMessage } from \"../../../helpers/errors\";\nimport { retrieveWalletAddress, getContract } from \"../../../helpers/connect\";\nimport \"./style.css\";\n\nexport default function TokenTransferModal({\n  show,\n  tokenId,\n  onSuccess,\n  onError,\n  onClose,\n}) {\n  const [account, setAccount] = useState();\n  const [contract, setContract] = useState();\n  const [destination, setDestination] = useState();\n\n  useEffect(() => {\n    const load = async () => {\n      let account = retrieveWalletAddress();\n      const cappuContract = await getContract();\n      setContract(cappuContract);\n      setAccount(account);\n    };\n\n    load();\n  }, []);\n\n  const sendToken = async () => {\n    try {\n      await contract.methods\n        .safeTransferFrom(account, destination, tokenId)\n        .send({ from: account })\n        .then(() => {\n          console.info(\"Sent successfully\");\n          onSuccess();\n        })\n        .catch((err) => {\n          console.error(err);\n          onError(extractErrorMessage(err));\n        });\n    } catch (e) {\n      onError(extractErrorMessage(e));\n    }\n  };\n\n  return (\n    <Modal show={show} onClose={onClose}>\n      <div className=\"transfer-token-container\">\n        <Input\n          placeholder=\"Destination address...\"\n          onChange={(e) => {\n            setDestination(e.target.value);\n          }}\n        />\n        <Button onClick={sendToken}>Send Token</Button>\n      </div>\n    </Modal>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Modal from \"../Modal\";\n\nimport \"./style.css\";\n\nexport default function ResultModal({ show, onClose, color, text }) {\n  return (\n    <Modal show={show} onClose={onClose}>\n      <Typography\n        id=\"transition-modal-title\"\n        variant=\"h6\"\n        component=\"h2\"\n        color={color}\n      >\n        {text}\n      </Typography>\n    </Modal>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"@mui/material/Button\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nimport TokenTransferModal from \"./TokenTransferModal\";\nimport ResultModal from \"../../components/ResultModal\";\nimport {\n  retrieveWalletAddress,\n  getContract,\n  getDesiredNetworkName,\n  getWalletNetworkName,\n} from \"../../helpers/connect\";\nimport \"./style.css\";\n\nexport default function MyTokens() {\n  const [account, setAccount] = useState();\n  const [networkName, setNetworkName] = useState();\n  const [tokensId, setTokensId] = useState();\n  const [tokensData, setTokensData] = useState();\n  const [tokenIdToTransfer, setTokenIdToTransfer] = useState(null);\n  const [resultModalMsg, setResultModalMsg] = useState(null);\n  const [resultModalColor, setResultModalColor] = useState(null);\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const load = async () => {\n    let account = retrieveWalletAddress();\n    setAccount(account);\n    if (account) {\n      const cappuContract = await getContract();\n      const netName = await getWalletNetworkName();\n      if (netName !== getDesiredNetworkName()) {\n        console.info(\"Wrong network!\");\n        return;\n      }\n\n      const output = await cappuContract.methods.getUserTokens(account).call();\n      const id = output[0];\n      const data = output[1];\n      setNetworkName(netName);\n      setTokensId(id);\n      setTokensData(data);\n    }\n  };\n\n  return (\n    <div className=\"my-tokens-container\">\n      {(() => {\n        if (!account) {\n          return <span>Connect your wallet</span>;\n        }\n        if (networkName !== getDesiredNetworkName()) {\n          return (\n            <span>\n              {\" \"}\n              {\"You need to connect your wallet to the \" +\n                getDesiredNetworkName() +\n                \" network.\"}\n            </span>\n          );\n        }\n        if (!tokensId || !tokensData) {\n          return <span>Failed to load tokens</span>;\n        }\n        if (tokensId.length === 0 || tokensData === 0) {\n          return (\n            <>\n              <span>You have no tokens yet</span>\n              <Link to=\"/mint\" className=\"mint-token-link\">\n                <Button>Mint a Token</Button>\n              </Link>\n            </>\n          );\n        }\n        return (\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Token ID</TableCell>\n                  <TableCell align=\"center\">Token Data</TableCell>\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {tokensId.map((id, index) => {\n                  let idString = id.toString();\n                  return (\n                    <TableRow\n                      key={id}\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {idString.substring(0, 5) +\n                          \"...\" +\n                          idString.substring(idString.length - 5)}\n                      </TableCell>\n                      <TableCell align=\"center\">{tokensData[index]}</TableCell>\n                      <TableCell align=\"center\">\n                        <Button\n                          onClick={() => {\n                            if (tokenIdToTransfer === id) {\n                              setTokenIdToTransfer(null);\n                            } else {\n                              setTokenIdToTransfer(id);\n                            }\n                          }}\n                        >\n                          Transfer\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        );\n      })()}\n\n      <TokenTransferModal\n        show={!!tokenIdToTransfer}\n        tokenId={tokenIdToTransfer}\n        onError={(errMsg) => {\n          setResultModalMsg(errMsg);\n          setResultModalColor(\"red\");\n          setTokenIdToTransfer(null);\n        }}\n        onSuccess={() => {\n          setResultModalMsg(\"Token transferred successfully\");\n          setResultModalColor(\"green\");\n          setTokenIdToTransfer(null);\n          load();\n        }}\n        onClose={() => {\n          setTokenIdToTransfer(null);\n        }}\n      />\n      <ResultModal\n        show={!!resultModalMsg}\n        onClose={() => {\n          setTokenIdToTransfer(null);\n          setResultModalMsg(null);\n          setResultModalColor(null);\n        }}\n        color={resultModalColor}\n        text={resultModalMsg}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport {\n  retrieveWalletAddress,\n  getContract,\n  getWalletNetworkName,\n  getDesiredNetworkName,\n} from \"../../helpers/connect\";\nimport ResultModal from \"../../components/ResultModal\";\nimport { extractErrorMessage } from \"../../helpers/errors\";\nimport \"./style.css\";\n\nfunction Mint() {\n  const [account, setAccount] = useState();\n  const [networkName, setNetworkName] = useState();\n  const [contract, setContract] = useState();\n  const [data, setData] = useState();\n  const [errMsg, setErrMsg] = useState();\n  const [mintSuccess, setMintSuccess] = useState();\n\n  useEffect(() => {\n    const load = async () => {\n      setAccount(retrieveWalletAddress());\n      const cappuContract = await getContract();\n      setContract(cappuContract);\n      const netName = await getWalletNetworkName();\n      setNetworkName(netName);\n    };\n\n    load();\n  }, []);\n\n  var mintToken = async () => {\n    contract.methods\n      .mint(data)\n      .send({ from: account })\n      .then(() => {\n        console.info(\"Minted\");\n        setMintSuccess(true);\n      })\n      .catch((e) => {\n        setMintSuccess(false);\n        setErrMsg(extractErrorMessage(e));\n      });\n  };\n\n  return (\n    <div className=\"mint-container\">\n      {(() => {\n        if (!account) {\n          return <span>Connect your wallet</span>;\n        }\n        if (networkName !== getDesiredNetworkName()) {\n          return (\n            <span>\n              {\" \"}\n              {\"You need to connect your wallet to the \" +\n                getDesiredNetworkName() +\n                \" network.\"}\n            </span>\n          );\n        }\n        return (\n          <>\n            <Input\n              placeholder=\"Insert token data here...\"\n              multiline\n              minRows=\"4\"\n              className=\"mint-input\"\n              onChange={(e) => setData(e.target.value)}\n            />\n            <Button\n              variant=\"contained\"\n              className=\"mint-submit\"\n              onClick={mintToken}\n            >\n              Mint\n            </Button>\n          </>\n        );\n      })()}\n      <ResultModal\n        show={mintSuccess != null}\n        onClose={() => {\n          setMintSuccess(null);\n          setErrMsg(null);\n        }}\n        color={mintSuccess ? \"green\" : \"red\"}\n        text={mintSuccess ? \"Minted\" : errMsg}\n      />\n    </div>\n  );\n}\n\nexport default Mint;\n","import { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport GitHub from \"@mui/icons-material/GitHub\";\nimport TravelExplore from \"@mui/icons-material/TravelExplore\";\nimport {\n  getContract,\n  getContractAddress,\n  getDesiredNetworkName,\n} from \"../../helpers/connect\";\n\nimport \"./style.css\";\n\nexport default function HomePage() {\n  const [numberOfTokenHolders, setNumberOfTokenHolders] = useState();\n  const [numberOfMintedTokens, setNumberOfMintedTokens] = useState();\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const load = async () => {\n    const cappuContract = await getContract();\n    cappuContract.methods\n      .getNumberOfTokenHolders()\n      .call()\n      .then(setNumberOfTokenHolders)\n      .catch(console.error);\n\n    cappuContract.methods\n      .getNumberOfMintedTokens()\n      .call()\n      .then(setNumberOfMintedTokens)\n      .catch(console.error);\n  };\n\n  return (\n    <div className=\"homepage-container\">\n      <div className=\"homepage-description\">\n        Cappu is an NFT platform helping users mint and transfer data NFT\n        tokens.\n        <br />\n        It is an open-source, work in progress, experimental ERC721\n        smart-contract.\n        <br />\n        <br />\n        This front-end currently contacts the contract deployed on the{\" \"}\n        {getDesiredNetworkName()} network, at this address:\n        <br />\n        {getContractAddress()}\n        <br />\n        <br />\n        You need to have the Metamask extention installed and choose the{\" \"}\n        {getDesiredNetworkName()} network, then you can connect your wallet and\n        start using the platform.\n      </div>\n      <div className=\"homepage-info\">\n        {numberOfMintedTokens ? (\n          <div className=\"homepage-info-item\">\n            <div className=\"homepage-info-item-title\">\n              Number of Minted Tokens\n            </div>\n            <div className=\"homepage-info-item-value\">\n              {numberOfMintedTokens}\n            </div>\n          </div>\n        ) : null}\n        {numberOfTokenHolders ? (\n          <div className=\"homepage-info-item\">\n            <div className=\"homepage-info-item-title\">\n              Current Number of Token Holders\n            </div>\n            <div className=\"homepage-info-item-value\">\n              {numberOfTokenHolders}\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <div className=\"homepage-actions\">\n        <ButtonGroup\n          variant=\"contained\"\n          aria-label=\"outlined primary button group\"\n        >\n          <Button\n            startIcon={<GitHub fontSize=\"large\" color=\"background\" />}\n            onClick={() =>\n              window.open(\"https://github.com/bshramin/cappu\", \"_blank\")\n            }\n          >\n            View on GitHub\n          </Button>\n          <Button\n            onClick={() =>\n              window.open(\n                \"https://\" +\n                  getDesiredNetworkName() +\n                  \".etherscan.io/address/\" +\n                  getContractAddress(),\n                \"_blank\"\n              )\n            }\n            startIcon={<TravelExplore fontSize=\"large\" color=\"background\" />}\n          >\n            Explore on EtherScan\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {\n  connectWallet,\n  retrieveWalletAddress,\n  isWalletConnected,\n  disconnectWallet,\n} from \"../../helpers/connect\";\nimport \"./style.css\";\n\nconst Header = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [anchorElNav, setAnchorElNav] = useState(null);\n  const [anchorElUser, setAnchorElUser] = useState(null);\n\n  const retrieveUserWalletAddress = () => {\n    let adrs = retrieveWalletAddress();\n    if (!adrs) {\n      return;\n    }\n    return adrs.substring(0, 5) + \"...\" + adrs.substring(adrs.length - 5);\n  };\n\n  const connectUserWallet = () => {\n    connectWallet().then(() => {\n      setIsLoggedIn(isWalletConnected());\n    });\n  };\n\n  const pages = [\n    { title: \"Mint\", url: \"/mint\", noLogin: false },\n    { title: \"My Tokens\", url: \"/my-tokens\", noLogin: false },\n  ];\n\n  const settings = [\n    {\n      title: \"Connect Wallet\",\n      login: false,\n      onClick: connectUserWallet,\n    },\n    {\n      title: \"Disconnect Wallet\",\n      login: true,\n      onClick: () => {\n        disconnectWallet();\n        setIsLoggedIn(false);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    setIsLoggedIn(isWalletConnected());\n  }, []);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n          >\n            <Link to=\"/\">Cappu</Link>\n          </Typography>\n\n          {isLoggedIn ? (\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {pages.map((page) =>\n                  page.noLogin || isLoggedIn ? (\n                    <MenuItem key={page.title} onClick={handleCloseNavMenu}>\n                      <Link to={page.url}>\n                        <Typography\n                          textAlign=\"center\"\n                          className=\"header-nav-link-mobile\"\n                        >\n                          {page.title}\n                        </Typography>\n                      </Link>\n                    </MenuItem>\n                  ) : null\n                )}\n              </Menu>\n            </Box>\n          ) : null}\n\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\n          >\n            <Link to=\"/\">Cappu</Link>\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {pages.map((page) =>\n              page.noLogin || isLoggedIn ? (\n                <Link\n                  to={page.url}\n                  className=\"header-nav-item\"\n                  key={page.title}\n                >\n                  <Typography\n                    textAlign=\"center\"\n                    className=\"header-nav-link-desktop\"\n                  >\n                    {page.title}\n                  </Typography>\n                </Link>\n              ) : null\n            )}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Wallet Options\">\n              <Button\n                onClick={isLoggedIn ? handleOpenUserMenu : connectUserWallet}\n                className=\"connect-btn\"\n                sx={{ p: 0 }}\n              >\n                {isLoggedIn ? retrieveUserWalletAddress() : \"Connect Wallet\"}\n              </Button>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) =>\n                setting.login === isLoggedIn ? (\n                  <MenuItem key={setting.title} onClick={setting.onClick}>\n                    <Typography textAlign=\"center\">{setting.title}</Typography>\n                  </MenuItem>\n                ) : null\n              )}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Header;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport \"./style.css\";\n\nconst Footer = () => {\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography className=\"footer-copyright\">\n            Cappu, The NFT Platform.\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport MyTokens from \"./containers/MyTokens\";\nimport Mint from \"./containers/Mint\";\nimport HomePage from \"./containers/HomePage\";\nimport Header from \"./containers/Header\";\nimport Footer from \"./containers/Footer\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport \"./index.css\";\n\nlet theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      dark: \"#7b5e57\",\n      main: \"#4e342e\",\n      light: \"#260e04\",\n    },\n    secondary: {\n      dark: \"#6a4f4b\",\n      main: \"#3e2723\",\n      light: \"#1b0000\",\n    },\n    background: {\n      default: \"#eeeeee\",\n      light: \"#f5f5f5\",\n      dark: \"#424242\",\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <div className=\"main-section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"my-tokens\" element={<MyTokens />} />\n          <Route path=\"mint\" element={<Mint />} />\n        </Routes>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}