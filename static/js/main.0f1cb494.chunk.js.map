{"version":3,"sources":["components/Modal/index.js","helpers/errors.js","config.js","helpers/connect.js","containers/MyTokens/TokenTransferModal/index.js","components/ConnectWallet/index.js","containers/MyTokens/index.js","containers/Mint/index.js","components/CappuActions/index.js","helpers/timeout.js","containers/HomePage/index.js","containers/Header/index.js","containers/Footer/index.js","index.js"],"names":["modalStyle","position","top","left","transform","width","bgcolor","border","borderRadius","boxShadow","p","display","justifyContent","alignItems","TokenTransfer","children","show","onClose","Modal","open","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Box","sx","extractErrorMessage","error","message","errorParts","split","length","JSON","parse","value","data","NETWORK_NAME","NETWORK","CONTACT_ADDRESS","CONTACT_ABI","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","getContractAddress","getDesiredNetworkName","getWalletNetworkName","a","web3","Web3","givenProvider","eth","net","getNetworkType","networkName","isOnTheRightNetwork","getWeb3","getContract","cappuContract","Contract","connectWallet","console","info","window","ethereum","alert","requestAccounts","accounts","sessionStorage","setItem","location","reload","retrieveWalletAddress","getItem","isWalletConnected","TokenTransferModal","tokenId","useState","transferLoading","setTransferLoading","transferError","setTransferError","transferSuccess","setTransferSuccess","account","setAccount","contract","setContract","destination","setDestination","useEffect","load","sendToken","methods","safeTransferFrom","send","from","then","catch","err","finally","CircularProgress","Typography","textAlign","color","className","Input","placeholder","onChange","e","target","Button","variant","onClick","ConnectWallet","ButtonGroup","METAMASK_DEEPLINK_PREFIX","MyTokens","pageLoading","setPageLoading","setNetworkName","tokensId","setTokensId","tokensData","setTokensData","tokenIdToTransfer","setTokenIdToTransfer","netName","getUserTokens","call","output","id","to","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","index","idString","toString","scope","substring","shouldLoad","Mint","mintLoading","setMintLoading","setData","errMsg","setErrMsg","mintSuccess","setMintSuccess","mintToken","mint","multiline","minRows","disabled","marginTop","CappuActions","navigate","useNavigate","timeoutPromise","promise","ms","timer","Promise","race","_r","rej","setTimeout","clearTimeout","HomePage","numOfTokensIsLoading","setNumOfTokensIsLoading","numOfHoldersIsLoading","setNumOfHoldersIsLoading","numberOfTokenHolders","setNumberOfTokenHolders","numberOfMintedTokens","setNumberOfMintedTokens","getNumberOfTokenHolders","getNumberOfMintedTokens","Header","isLoggedIn","setIsLoggedIn","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","connectUserWallet","pages","title","url","noLogin","settings","login","removeItem","handleCloseNavMenu","AppBar","Container","maxWidth","Toolbar","disableGutters","noWrap","mr","xs","md","flexGrow","IconButton","size","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","page","MenuItem","Tooltip","adrs","retrieveUserWalletAddress","mt","setting","Footer","fontSize","alt","theme","createTheme","palette","mode","primary","dark","main","light","secondary","background","default","ReactDOM","render","ThemeProvider","basename","process","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.0f1cb494.chunk.js","sourcesContent":["import Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\n\nimport \"./style.css\";\n\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  borderRadius: \"8px\",\n  boxShadow: 24,\n  p: 4,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nexport default function TokenTransfer({ children, show, onClose }) {\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={show}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Box sx={modalStyle}>{children}</Box>\n    </Modal>\n  );\n}\n","export const extractErrorMessage = (error) => {\n  if (error.message) {\n    let errorParts = error.message.split(\"'\");\n\n    if (errorParts.length > 1) {\n      return JSON.parse(errorParts[1]).value.data.message;\n    }\n\n    return error.message;\n  }\n  return error;\n};\n","// For development with Ganache.\n// export const DAPP_URL = \"localhost:3000\";\n// export const METAMASK_DEEPLINK_PREFIX = \"https://metamask.app.link/dapp/\";\n// export const NETWORK_NAME = \"private\";\n// export const NETWORK = \"http://localhost:7545\";\n// export const CONTACT_ADDRESS = \"0x3Ce1aA8c110a74810Db3CCC4A7D8aE97ae9F907C\";\n\nexport const DAPP_URL = \"bshramin.github.io/cappu\";\nexport const METAMASK_DEEPLINK_PREFIX = \"https://metamask.app.link/dapp/\";\nexport const NETWORK_NAME = \"ropsten\";\nexport const NETWORK =\n  \"https://speedy-nodes-nyc.moralis.io/91eaf4d08216c15dcf25aa72/eth/ropsten\";\nexport const CONTACT_ADDRESS = \"0xf1359760a1b37a9f8d85341E72cEF0644DB660A1\"; // Change this to the new address of the contract\n\nexport const CONTACT_ABI = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"data\",\n        type: \"string\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"getUserTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"string[]\",\n        name: \"\",\n        type: \"string[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getNumberOfTokenHolders\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getNumberOfMintedTokens\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","import Web3 from \"web3\";\nimport { NETWORK, NETWORK_NAME, CONTACT_ABI, CONTACT_ADDRESS } from \"../config\";\n\nexport const getContractAddress = () => {\n  return CONTACT_ADDRESS;\n};\n\nexport const getDesiredNetworkName = () => {\n  return NETWORK_NAME;\n};\n\nexport const getDesiredNetwork = () => {\n  return NETWORK;\n};\n\nexport const getWalletNetwork = () => {\n  return Web3.givenProvider;\n};\n\nexport const getWalletWeb3 = () => {\n  return new Web3(Web3.givenProvider);\n};\n\nexport const getWalletNetworkName = async () => {\n  const web3 = getWalletWeb3();\n  let networkName = await web3.eth.net.getNetworkType();\n  return networkName;\n};\n\nexport const isOnTheRightNetwork = async () => {\n  let networkName = await getWalletNetworkName();\n  return networkName === getDesiredNetworkName();\n};\n\nexport const getWeb3 = async () => {\n  const isRightNetwork = await isOnTheRightNetwork();\n  if (isRightNetwork) {\n    return new Web3(Web3.givenProvider);\n  }\n  return new Web3(NETWORK);\n};\n\nexport const getContract = async () => {\n  const web3 = await getWeb3();\n  const cappuContract = new web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\n  return cappuContract;\n};\n\nexport const connectWallet = async () => {\n  console.info(\"Connecting to Wallet...\");\n  if (typeof window.ethereum === \"undefined\") {\n    alert(\"You need to install the Metamask extension.\");\n    return;\n  }\n\n  const isRightNetwork = await isOnTheRightNetwork();\n  if (!isRightNetwork) {\n    console.info(\"Wrong network!\");\n    alert(\n      \"You need to connect your wallet to the \" + NETWORK_NAME + \" network.\"\n    );\n    return;\n  }\n\n  const web3 = await getWeb3();\n  const accounts = await web3.eth.requestAccounts();\n  window.sessionStorage.setItem(\"account\", accounts[0]);\n  window.location.reload();\n};\n\nexport const retrieveWalletAddress = () => {\n  const walletAddress = window.sessionStorage.getItem(\"account\");\n  return walletAddress;\n};\n\nexport const isWalletConnected = () => {\n  const walletAddress = window.sessionStorage.getItem(\"account\");\n  return walletAddress ? true : false;\n};\n\nexport const disconnectWallet = () => {\n  window.sessionStorage.removeItem(\"account\");\n  window.location.reload();\n};\n","import { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Modal from \"../../../components/Modal\";\nimport { extractErrorMessage } from \"../../../helpers/errors\";\nimport { retrieveWalletAddress, getContract } from \"../../../helpers/connect\";\nimport \"./style.css\";\nimport { Typography } from \"@mui/material\";\n\nexport default function TokenTransferModal({ show, tokenId, onClose }) {\n  const [transferLoading, setTransferLoading] = useState(false);\n  const [transferError, setTransferError] = useState(null);\n  const [transferSuccess, setTransferSuccess] = useState(false);\n  const [account, setAccount] = useState();\n  const [contract, setContract] = useState();\n  const [destination, setDestination] = useState();\n\n  useEffect(() => {\n    const load = async () => {\n      let account = retrieveWalletAddress();\n      const cappuContract = await getContract();\n      setContract(cappuContract);\n      setAccount(account);\n    };\n\n    load();\n  }, []);\n\n  const sendToken = async () => {\n    try {\n      setTransferLoading(true);\n      await contract.methods\n        .safeTransferFrom(account, destination, tokenId)\n        .send({ from: account })\n        .then(() => {\n          console.info(\"Sent successfully\");\n          setTransferSuccess(true);\n        })\n        .catch((err) => {\n          console.error(err);\n          setTransferError(extractErrorMessage(err));\n        })\n        .finally(() => {\n          setTransferLoading(false);\n        });\n    } catch (e) {\n      console.error(e);\n      setTransferError(extractErrorMessage(e));\n      setTransferLoading(false);\n    }\n  };\n\n  return (\n    <Modal\n      show={show}\n      onClose={() => {\n        onClose(transferSuccess);\n      }}\n    >\n      {(() => {\n        if (transferLoading) {\n          return <CircularProgress />;\n        }\n        if (transferError) {\n          return (\n            <Typography sx={{ textAlign: \"center\", color: \"red\" }}>\n              {transferError}\n            </Typography>\n          );\n        }\n        if (transferSuccess) {\n          return (\n            <Typography sx={{ textAlign: \"center\", color: \"green\" }}>\n              Transfer successful\n            </Typography>\n          );\n        }\n        return (\n          <div className=\"transfer-token-container\">\n            <Input\n              className=\"transfer-token-input\"\n              placeholder=\"Destination address...\"\n              onChange={(e) => {\n                setDestination(e.target.value);\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              className=\"transfer-token-btn\"\n              onClick={sendToken}\n            >\n              Send Token\n            </Button>\n          </div>\n        );\n      })()}\n    </Modal>\n  );\n}\n","import Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport { connectWallet } from \"../../helpers/connect\";\nimport { DAPP_URL, METAMASK_DEEPLINK_PREFIX } from \"../../config.js\";\n\nimport \"./style.css\";\n\nexport default function ConnectWallet() {\n  return (\n    <ButtonGroup\n      className=\"connect-wallet-button-group\"\n      variant=\"contained\"\n      aria-label=\"outlined primary button group\"\n    >\n      <Button className=\"connect-wallet-button\" onClick={connectWallet}>\n        Connect Metamask Extension\n      </Button>\n      <Button\n        className=\"connect-wallet-button\"\n        onClick={() => window.open(METAMASK_DEEPLINK_PREFIX + DAPP_URL)}\n      >\n        Open in Metamask Browser\n      </Button>\n    </ButtonGroup>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"@mui/material/Button\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport TokenTransferModal from \"./TokenTransferModal\";\nimport ConnectWallet from \"../../components/ConnectWallet\";\nimport {\n  retrieveWalletAddress,\n  getContract,\n  getDesiredNetworkName,\n  getWalletNetworkName,\n} from \"../../helpers/connect\";\nimport \"./style.css\";\n\nexport default function MyTokens() {\n  const [pageLoading, setPageLoading] = useState(true);\n  const [account, setAccount] = useState();\n  const [networkName, setNetworkName] = useState();\n  const [tokensId, setTokensId] = useState();\n  const [tokensData, setTokensData] = useState();\n  const [tokenIdToTransfer, setTokenIdToTransfer] = useState(null);\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const load = async () => {\n    let account = retrieveWalletAddress();\n    setAccount(account);\n    if (account) {\n      const cappuContract = await getContract();\n      const netName = await getWalletNetworkName();\n      if (netName !== getDesiredNetworkName()) {\n        console.info(\"Wrong network!\");\n        return;\n      }\n\n      const output = await cappuContract.methods.getUserTokens(account).call();\n      const id = output[0];\n      const data = output[1];\n      setNetworkName(netName);\n      setTokensId(id);\n      setTokensData(data);\n    }\n    setPageLoading(false);\n  };\n\n  return (\n    <div className=\"my-tokens-container\">\n      {(() => {\n        if (pageLoading) {\n          return <CircularProgress />;\n        }\n        if (!account) {\n          return (\n            <>\n              <span>\n                Connect your Metamask wallet or open Cappu in the Metamask\n                browser\n              </span>\n              <ConnectWallet />\n            </>\n          );\n        }\n        if (networkName !== getDesiredNetworkName()) {\n          return (\n            <span>\n              {\" \"}\n              {\"You need to connect your wallet to the \" +\n                getDesiredNetworkName() +\n                \" network.\"}\n            </span>\n          );\n        }\n        if (!tokensId || !tokensData) {\n          return <span>Failed to load tokens</span>;\n        }\n        if (tokensId.length === 0 || tokensData === 0) {\n          return (\n            <>\n              <span>You have no tokens yet</span>\n              <Link to=\"/mint\" className=\"mint-token-link\">\n                <Button variant=\"contained\">Mint a Token</Button>\n              </Link>\n            </>\n          );\n        }\n        return (\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Token ID</TableCell>\n                  <TableCell align=\"center\">Token Data</TableCell>\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {tokensId.map((id, index) => {\n                  let idString = id.toString();\n                  return (\n                    <TableRow\n                      key={id}\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {idString.substring(0, 5) +\n                          \"...\" +\n                          idString.substring(idString.length - 5)}\n                      </TableCell>\n                      <TableCell align=\"center\">{tokensData[index]}</TableCell>\n                      <TableCell align=\"center\">\n                        <Button\n                          onClick={() => {\n                            if (tokenIdToTransfer === id) {\n                              setTokenIdToTransfer(null);\n                            } else {\n                              setTokenIdToTransfer(id);\n                            }\n                          }}\n                        >\n                          Transfer\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        );\n      })()}\n\n      {tokenIdToTransfer ? (\n        <TokenTransferModal\n          show={!!tokenIdToTransfer}\n          tokenId={tokenIdToTransfer}\n          onClose={(shouldLoad) => {\n            setTokenIdToTransfer(null);\n            if (shouldLoad) {\n              load();\n            }\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport Typography from \"@mui/material/Typography\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport {\n  retrieveWalletAddress,\n  getContract,\n  getWalletNetworkName,\n  getDesiredNetworkName,\n} from \"../../helpers/connect\";\nimport Modal from \"../../components/Modal\";\nimport ConnectWallet from \"../../components/ConnectWallet\";\nimport { extractErrorMessage } from \"../../helpers/errors\";\nimport \"./style.css\";\n\nfunction Mint() {\n  const [mintLoading, setMintLoading] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [account, setAccount] = useState();\n  const [networkName, setNetworkName] = useState();\n  const [contract, setContract] = useState();\n  const [data, setData] = useState();\n  const [errMsg, setErrMsg] = useState();\n  const [mintSuccess, setMintSuccess] = useState();\n\n  useEffect(() => {\n    const load = async () => {\n      setAccount(retrieveWalletAddress());\n      const cappuContract = await getContract();\n      setContract(cappuContract);\n      const netName = await getWalletNetworkName();\n      setNetworkName(netName);\n      setPageLoading(false);\n    };\n\n    load();\n  }, []);\n\n  var mintToken = async () => {\n    setMintLoading(true);\n    contract.methods\n      .mint(data)\n      .send({ from: account })\n      .then(() => {\n        console.info(\"Minted\");\n        setMintSuccess(true);\n      })\n      .catch((e) => {\n        setMintSuccess(false);\n        console.error(e);\n        setErrMsg(extractErrorMessage(e));\n      })\n      .finally(() => {\n        setMintLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"mint-container\">\n      {(() => {\n        if (pageLoading) {\n          return <CircularProgress />;\n        }\n        if (!account) {\n          return (\n            <>\n              <span>\n                Connect your Metamask wallet or open Cappu in the Metamask\n                browser\n              </span>\n              <ConnectWallet />\n            </>\n          );\n        }\n        if (networkName !== getDesiredNetworkName()) {\n          return (\n            <span>\n              {\" \"}\n              {\"You need to connect your wallet to the \" +\n                getDesiredNetworkName() +\n                \" network.\"}\n            </span>\n          );\n        }\n        return (\n          <>\n            <Input\n              placeholder=\"Insert token data here...\"\n              multiline\n              minRows=\"4\"\n              className=\"mint-input\"\n              onChange={(e) => setData(e.target.value)}\n              disabled={mintLoading}\n            />\n            <Button\n              variant=\"contained\"\n              className=\"mint-submit\"\n              onClick={mintToken}\n              disabled={mintLoading}\n            >\n              Mint\n            </Button>\n          </>\n        );\n      })()}\n      <Modal\n        show={mintSuccess != null || mintLoading}\n        onClose={() => {\n          setMintSuccess(null);\n          setErrMsg(null);\n        }}\n      >\n        {mintLoading ? (\n          <div className=\"modal-pending-child\">\n            <Typography variant=\"h6\">Minting...</Typography>\n            <CircularProgress sx={{ marginTop: \"10px\" }} />\n          </div>\n        ) : (\n          <Typography\n            id=\"transition-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            color={mintSuccess ? \"green\" : \"red\"}\n            sx={{ textAlign: \"center\" }}\n          >\n            {mintSuccess ? \"Minted\" : errMsg}\n          </Typography>\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nexport default Mint;\n","import { useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\n\nimport \"./style.css\";\n\nexport default function CappuActions() {\n  let navigate = useNavigate();\n\n  return (\n    <ButtonGroup\n      className=\"connect-wallet-button-group\"\n      variant=\"contained\"\n      aria-label=\"outlined primary button group\"\n    >\n      <Button\n        className=\"connect-wallet-button\"\n        onClick={() => {\n          navigate(\"/mint\");\n        }}\n      >\n        Mint a Token\n      </Button>\n      <Button\n        className=\"connect-wallet-button\"\n        onClick={() => {\n          navigate(\"/my-tokens\");\n        }}\n      >\n        My Tokens\n      </Button>\n    </ButtonGroup>\n  );\n}\n","export const timeoutPromise = (promise, ms) => {\n  let timer;\n  return Promise.race([\n    promise,\n    new Promise((_r, rej) => (timer = setTimeout(rej, ms))),\n  ]).finally(() => clearTimeout(timer));\n};\n","import { useEffect, useState } from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport ConnectWallet from \"../../components/ConnectWallet\";\nimport CappuActions from \"../../components/CappuActions\";\nimport {\n  getContract,\n  getContractAddress,\n  getDesiredNetworkName,\n  isWalletConnected,\n} from \"../../helpers/connect\";\nimport { timeoutPromise } from \"../../helpers/timeout\";\nimport \"./style.css\";\n\nexport default function HomePage() {\n  const [numOfTokensIsLoading, setNumOfTokensIsLoading] = useState(true);\n  const [numOfHoldersIsLoading, setNumOfHoldersIsLoading] = useState(true);\n  const [numberOfTokenHolders, setNumberOfTokenHolders] = useState();\n  const [numberOfMintedTokens, setNumberOfMintedTokens] = useState();\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const load = async () => {\n    const cappuContract = await getContract();\n    timeoutPromise(cappuContract.methods.getNumberOfTokenHolders().call(), 1000)\n      .then(setNumberOfTokenHolders)\n      .catch(console.error);\n\n    setNumOfHoldersIsLoading(false);\n\n    timeoutPromise(cappuContract.methods.getNumberOfMintedTokens().call(), 1000)\n      .then(setNumberOfMintedTokens)\n      .catch(console.error);\n\n    setNumOfTokensIsLoading(false);\n  };\n\n  return (\n    <div className=\"homepage-container\">\n      <div className=\"homepage-description\">\n        Cappu is an NFT platform helping users mint and transfer data NFT\n        tokens.\n        <br />\n        It is an open-source, work in progress, experimental ERC721\n        smart-contract.\n        <br />\n        <br />\n        This front-end currently contacts the contract deployed on the{\" \"}\n        {getDesiredNetworkName()} network, at this address:\n        <br />\n        {getContractAddress()}\n        <br />\n        <br />\n        You need to have the Metamask extention installed and choose the{\" \"}\n        {getDesiredNetworkName()} network, then you can connect your wallet and\n        start using the platform.\n      </div>\n      <div className=\"homepage-info\">\n        <div className=\"homepage-info-item\">\n          <div className=\"homepage-info-item-title\">Number of Tokens</div>\n          <div className=\"homepage-info-item-value\">\n            {numOfTokensIsLoading ? <CircularProgress /> : numberOfMintedTokens}\n          </div>\n        </div>\n\n        <div className=\"homepage-info-item\">\n          <div className=\"homepage-info-item-title\">Number of Holders</div>\n          <div className=\"homepage-info-item-value\">\n            {numOfHoldersIsLoading ? (\n              <CircularProgress />\n            ) : (\n              numberOfTokenHolders\n            )}\n          </div>\n        </div>\n      </div>\n\n      {isWalletConnected() ? <CappuActions /> : <ConnectWallet />}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {\n  connectWallet,\n  retrieveWalletAddress,\n  isWalletConnected,\n  disconnectWallet,\n} from \"../../helpers/connect\";\nimport \"./style.css\";\n\nconst Header = () => {\n  let navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [anchorElNav, setAnchorElNav] = useState(null);\n  const [anchorElUser, setAnchorElUser] = useState(null);\n\n  const retrieveUserWalletAddress = () => {\n    let adrs = retrieveWalletAddress();\n    if (!adrs) {\n      return;\n    }\n    return adrs.substring(0, 5) + \"...\" + adrs.substring(adrs.length - 5);\n  };\n\n  const connectUserWallet = () => {\n    connectWallet().then(() => {\n      setIsLoggedIn(isWalletConnected());\n    });\n  };\n\n  const pages = [\n    { title: \"Mint\", url: \"/mint\", noLogin: false },\n    { title: \"My Tokens\", url: \"/my-tokens\", noLogin: false },\n  ];\n\n  const settings = [\n    {\n      title: \"Connect Wallet\",\n      login: false,\n      onClick: connectUserWallet,\n    },\n    {\n      title: \"Disconnect Wallet\",\n      login: true,\n      onClick: () => {\n        disconnectWallet();\n        setIsLoggedIn(false);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    setIsLoggedIn(isWalletConnected());\n  }, []);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n          >\n            <Link to=\"/\">Cappu</Link>\n          </Typography>\n\n          {isLoggedIn ? (\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {pages.map((page) =>\n                  page.noLogin || isLoggedIn ? (\n                    <MenuItem\n                      key={page.title}\n                      onClick={(e) => {\n                        handleCloseNavMenu(e);\n                        navigate(page.url);\n                      }}\n                    >\n                      <Typography\n                        textAlign=\"center\"\n                        className=\"header-nav-link-mobile\"\n                      >\n                        {page.title}\n                      </Typography>\n                    </MenuItem>\n                  ) : null\n                )}\n              </Menu>\n            </Box>\n          ) : null}\n\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\n          >\n            <Link to=\"/\">Cappu</Link>\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {pages.map((page) =>\n              page.noLogin || isLoggedIn ? (\n                <Link\n                  to={page.url}\n                  className=\"header-nav-item\"\n                  key={page.title}\n                >\n                  <Typography\n                    textAlign=\"center\"\n                    className=\"header-nav-link-desktop\"\n                  >\n                    {page.title}\n                  </Typography>\n                </Link>\n              ) : null\n            )}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Wallet Options\">\n              <Button\n                onClick={isLoggedIn ? handleOpenUserMenu : connectUserWallet}\n                className=\"connect-btn\"\n                sx={{ p: 0 }}\n              >\n                {isLoggedIn ? retrieveUserWalletAddress() : \"Connect Wallet\"}\n              </Button>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) =>\n                setting.login === isLoggedIn ? (\n                  <MenuItem key={setting.title} onClick={setting.onClick}>\n                    <Typography textAlign=\"center\">{setting.title}</Typography>\n                  </MenuItem>\n                ) : null\n              )}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Header;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport \"./style.css\";\n\nimport GitHub from \"@mui/icons-material/GitHub\";\nimport TravelExplore from \"@mui/icons-material/TravelExplore\";\nimport {\n  getContractAddress,\n  getDesiredNetworkName,\n} from \"../../helpers/connect\";\n\nimport \"./style.css\";\n\nconst Footer = () => {\n  return (\n    <AppBar position=\"static\" className=\"footer-container\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography className=\"footer-copyright\">\n            Cappu, The NFT Platform.\n          </Typography>\n          <div>\n            <GitHub\n              onClick={() =>\n                window.open(\"https://github.com/bshramin/cappu\", \"_blank\")\n              }\n              fontSize=\"large\"\n              color=\"background\"\n            />\n\n            <TravelExplore\n              alt=\"View on Etherscan\"\n              onClick={() =>\n                window.open(\n                  \"https://\" +\n                    getDesiredNetworkName() +\n                    \".etherscan.io/address/\" +\n                    getContractAddress(),\n                  \"_blank\"\n                )\n              }\n              fontSize=\"large\"\n              color=\"background\"\n            />\n          </div>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport MyTokens from \"./containers/MyTokens\";\nimport Mint from \"./containers/Mint\";\nimport HomePage from \"./containers/HomePage\";\nimport Header from \"./containers/Header\";\nimport Footer from \"./containers/Footer\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport \"./index.css\";\n\nlet theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      dark: \"#7b5e57\",\n      main: \"#4e342e\",\n      light: \"#260e04\",\n    },\n    secondary: {\n      dark: \"#6a4f4b\",\n      main: \"#3e2723\",\n      light: \"#1b0000\",\n    },\n    background: {\n      default: \"#eeeeee\",\n      light: \"#f5f5f5\",\n      dark: \"#424242\",\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <div className=\"main-section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"my-tokens\" element={<MyTokens />} />\n          <Route path=\"mint\" element={<Mint />} />\n        </Routes>\n      </div>\n      <Footer />\n    </BrowserRouter>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}